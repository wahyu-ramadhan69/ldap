const js = require('@eslint/js');
const jsdoc = require('eslint-plugin-jsdoc');
const globals = require('globals');

module.exports = [
  jsdoc.configs['flat/recommended'],
  {
    plugins: {
      jsdoc,
    },
    files: ['*.js'],
    languageOptions: {
      sourceType: 'commonjs',
      globals: {
        ...globals.node,
      },
    },
    rules: {
      ...js.configs.recommended.rules,
      'linebreak-style': ['error', 'unix'],
      quotes: ['error', 'single'],
      semi: ['error', 'always'],
      'jsdoc/require-description': ['error'],
      'object-curly-spacing': ['error', 'always'],
      'default-case': ['error'],
      'guard-for-in': ['error'],
      'no-caller': ['error'],
      'no-empty-function': ['error'],
      'no-eval': ['error'],
      'no-extend-native': ['error'],
      'no-extra-bind': ['error'],
      'no-floating-decimal': ['error'],
      'no-implied-eval': ['error'],
      'no-invalid-this': ['error'],
      'no-labels': ['error'],
      'no-lone-blocks': ['error'],
      'no-loop-func': ['error'],
      'no-param-reassign': ['error'],
      'no-restricted-properties': ['error'],
      'no-return-assign': ['error'],
      'no-self-compare': ['error'],
      'no-sequences': ['error'],
      'no-throw-literal': ['error'],
      'no-unmodified-loop-condition': ['error'],
      'no-unused-expressions': ['error', { allowShortCircuit: true }],
      'no-useless-call': ['error'],
      'no-useless-concat': ['error'],
      'no-useless-escape': ['error'],
      'no-void': ['error'],
      'no-with': ['error'],
      radix: ['error', 'always'],
      'no-catch-shadow': ['error'],
      'no-shadow': ['error'],
      'no-shadow-restricted-names': ['error'],
      'no-use-before-define': ['error'],
      'callback-return': ['error'],
      'global-require': ['error'],
      'no-mixed-requires': ['error'],
      'handle-callback-err': ['error'],
      'no-new-require': ['error'],
      'no-path-concat': ['error'],
      'no-process-exit': ['error'],
      'array-bracket-spacing': ['error', 'never'],
      'block-spacing': ['error', 'always'],
      'brace-style': ['error'],
      camelcase: ['error'],
      'comma-spacing': ['error', { before: false, after: true }],
      'comma-style': ['error', 'last'],
      'eol-last': ['error'],
      'func-call-spacing': ['error', 'never'],
      'key-spacing': ['error', { beforeColon: false }],
      'keyword-spacing': ['error', { before: true }],
      'new-parens': ['error'],
      'no-bitwise': ['error'],
      'no-mixed-operators': ['error'],
      'no-multi-assign': ['error'],
      'no-trailing-spaces': ['error'],
      'one-var': ['error', 'never'],
      'one-var-declaration-per-line': ['error'],
      'space-in-parens': ['error', 'never'],
      'space-infix-ops': ['error'],
      'spaced-comment': ['error', 'always'],
      curly: ['error'],
    },
  },
];
